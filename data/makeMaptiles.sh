#!/bin/sh

### Shell script to prepare Mapbox tiles from data

### First, add an "id" as a top level property for each feature
### Second, convert the geojson with the ids into a mbtiles set that can be uploaded to Mapbox (https://studio.mapbox.com/tilesets/)

### This process is repeated for both parlamentary constituencies (PCs) and regions

### Library requirements:
### ndjson-cli
### tippecanoe


### Parlamentary Constituency (PC) data:

# remove all line breaks from the geojson so we can use ndjson-split and add id as a top level property
cat pcs.geojson | tr '\n' ' ' > pcs_no_linebreaks.geojson

# turn the geojson into a newline-delimited json
ndjson-split 'd.features' < pcs_no_linebreaks.geojson > pcs.ndjson

# add id to each feature from its properties
ndjson-map 'd.id = +d.properties.mapbox_id, d' \
  < pcs.ndjson \
  > pcs-id.ndjson

# convert back to geojson
ndjson-reduce \
  < pcs-id.ndjson \
  | ndjson-map '{type: "FeatureCollection", features: d}' \
  > pcs-id.json

# convert geojson into mbtiles using tippecanoe for mapbox
tippecanoe -pk -pn -f -ps -o pcs_id.mbtiles -Z3 -z12 pcs-id.json

# upload to mapbox tileset: pcs_id-dcxlet
# for testing purposes: pcs_id_test-85j0ux


### Region data:

# remove all line breaks from the geojson so we can use ndjson-split and add id as a top level property
cat regions.geojson | tr '\n' ' ' > regions_no_linebreaks.geojson

# turn the geojson into a newline-delimited json
ndjson-split 'd.features' < regions_no_linebreaks.geojson > regions.ndjson

# add id to each feature from its properties
ndjson-map 'd.id = +d.properties.mapbox_id, d' \
  < regions.ndjson \
  > regions-id.ndjson

# convert back to geojson
ndjson-reduce \
  < regions-id.ndjson \
  | ndjson-map '{type: "FeatureCollection", features: d}' \
  > regions-id.json

# convert geojson into mbtiles using tippecanoe for mapbox
tippecanoe -pk -pn -f -ps -o regions_id.mbtiles -Z3 -z12 regions-id.json

# upload to mapbox tileset: regions-7y5w48
# for testing purposes: regions_id_test-0ojckb
